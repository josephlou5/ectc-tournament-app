{% extends "shared/layout.jinja" %}

{% block title %}
Notifications
{% endblock %}

{% set fetch_roster_btn_id = "fetch-roster-btn" %}
{% set fetch_roster_dummy_input_id = "fetch-roster-dummy-input" %}
{# messages and status are combined for fetch roster #}
{% set fetch_roster_status_id = "fetch-roster-status" %}

{% set match_numbers_input_id = "match-numbers-input" %}
{% set fetch_matches_btn_id = "fetch-matches-btn" %}
{% set fetch_matches_status_id = "fetch-matches-status" %}
{% set matches_info_id = "matches-info" %}

{% set send_notif_btn_id = "send-notification-btn" %}

{% set flashed = get_flashed_by_categories() %}

{% block body %}
<div id="notifications-body" class="container-fluid">
  <h2>Notifications</h2>

  <div class="row mb-2">
    <div class="col">
      <h4>Teams Roster</h4>
      <div class="mb-2">
        The roster in the TMS spreadsheet will be fetched whenever the "Fetch
        Roster" button is pressed. There should be a worksheet called
        <code>{{ roster_worksheet_name }}</code> with the full teams roster.
        (Note: the header columns are case insensitive and must be unique.)
        {# TODO: add a help page with the full requirements of the worksheet #}
      </div>
      {% if roster_last_fetched_time is not none %}
      {# assume there is a roster #}
      <div class="mb-2">
        You can view the full roster here:
        <a href="{{ url_for('view_full_roster') }}">Full Roster</a>
      </div>
      {% endif %}
      <div class="mb-2">
        {# no "mb-2" so the error messages are close to the button #}
        <div class="row align-items-center">
          <div class="col-auto">
            <button id="{{ fetch_roster_btn_id }}" class="btn btn-success">
              Fetch Roster
            </button>
          </div>
          <div id="{{ fetch_roster_status_id }}" class="col-auto">
            {% for message in flashed["fetch-roster"] %}
            {% call macros.bs_alert_sm("success", classes="me-2") %}
            {{ message }}
            {% endcall %}
            {% endfor %}
          </div>
        </div>
        <div class="row mb-2">
          <div class="col">
            <input type="hidden" id="{{ fetch_roster_dummy_input_id }}" />
            <div
              id="{{ fetch_roster_dummy_input_id }}-invalid"
              class="invalid-feedback"
            ></div>
          </div>
        </div>
        {% if roster_last_fetched_time is not none %}
        <div class="row mt-3 mb-2">
          {# alerts have weird spacings, so need to also have "mt-3" #}
          <div class="col-auto">
            {% call macros.bs_alert_sm("warning", dismissible=false) %}
            Warning: Fetching again will override the current roster.
            {% endcall %}
          </div>
        </div>
        {% endif %}
        <div class="row mb-2">
          <div class="col">
            Last fetched:
            {% if roster_last_fetched_time is none %}
            <em class="text-muted">never</em>
            {% else %}
            {{ roster_last_fetched_time }}
            {% if has_fetch_logs %}
            <a href="{{ url_for('fetch_roster_logs') }}">(logs)</a>
            {% endif %}
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row mb-2">
    <div class="col">
      <h4>Send Match Notifications</h4>
      <div class="row mb-2">
        <div class="col">
          Enter the match numbers below that you want to send notifications for.
        </div>
      </div>
      <div class="row mb-2">
        {# want the switch back to auto somewhere between xs and sm, but not
           possible without customizing the breakpoints
         #}
        <div class="col-xs-auto col-sm col-xl-auto">
          <div class="row">
            <label
              for="{{ match_numbers_input_id }}"
              class="col-auto col-form-label"
            >
              Matches
            </label>
            <div class="col">
              <input
                type="text"
                id="{{ match_numbers_input_id }}"
                class="form-control"
              />
              <div
                id="{{ match_numbers_input_id }}-invalid"
                class="invalid-feedback"
              ></div>
              <div class="form-text">
                The match numbers should be separated by spaces or commas. You
                may use dashes for match number ranges.
              </div>
            </div>
          </div>
        </div>
        <div class="col-auto">
          <button
            type="button"
            id="{{ fetch_matches_btn_id }}"
            class="btn btn-success"
          >
            Fetch Matches Info
          </button>
        </div>
        {# can't align center because of the input description and validation,
           but "pt-2" seems to look good and centered wrt the fetch button
         #}
        <div id="{{ fetch_matches_status_id }}" class="col-auto pt-2"></div>
      </div>
      <div class="row">
        <h4>Matches Info</h4>
        <div id="{{ matches_info_id }}">
          <!-- filled out by AJAX calls -->
          No matches
        </div>
      </div>
      <div class="row mt-2">
        <div class="col">
          {# button currently does nothing #}
          <button id="{{ send_notif_btn_id }}" class="btn btn-primary">
            Send Notification
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block script %}
<script>
  function handleFetchRosterClicked() {
    const FETCHING = 'Fetching...';

    if ($('#{{ fetch_roster_status_id }}').html().trim() === FETCHING) {
      // currently fetching; ignore click
      return;
    }

    clearInvalid('{{ fetch_roster_dummy_input_id }}');

    $('#{{ fetch_roster_status_id }}').html(FETCHING);
    ajaxRequest('POST', '{{ url_for("fetch_roster") }}', {
      success: (response, status, jqXHR) => {
        if (response.success) {
          // reload the page
          location.reload();
        } else {
          // clear the status
          $('#{{ fetch_roster_status_id }}').html('');
          // some failure
          setInvalid(
            '{{ fetch_roster_dummy_input_id }}',
            response.reason ?? 'Unknown error: please try again'
          );
        }
      },
      error: (jqXHR, status, errorThrown) => {
        // clear the status
        $('#{{ fetch_roster_status_id }}').html('');
        setInvalid('{{ fetch_roster_dummy_input_id }}', jqXHR.statusText);
      },
    });
  }

  function handleFetchMatchInfoClicked() {
    const FETCHING = 'Fetching...';

    if ($('#{{ fetch_matches_status_id }}').html().trim() === FETCHING) {
      // currently fetching; ignore the click
      return;
    }

    // clear status
    $('#{{ fetch_matches_status_id }}').html('');
    clearInvalid('{{ match_numbers_input_id }}');

    const matchesQuery = getInputValue('{{ match_numbers_input_id }}');
    if (matchesQuery === '') {
      // Error: no match numbers given
      setInvalid(
        '{{ match_numbers_input_id }}',
        'Please enter a match number.'
      );
      return;
    }

    $('#{{ fetch_matches_status_id }}').html(FETCHING);
    ajaxRequest('GET', '{{ url_for("fetch_matches_info") }}', {
      data: { matches: matchesQuery },
      success: (response, status, jqXHR) => {
        // clear the status
        $('#{{ fetch_matches_status_id }}').html('');
        if (response.success) {
          // clear the input
          $('#{{ match_numbers_input_id }}').val('');
          // display the match numbers for now
          $('#{{ matches_info_id }}').html(
            response['match_numbers'].join(', ')
          );
        } else {
          // some failure
          setInvalid(
            '{{ match_numbers_input_id }}',
            response.reason ?? 'Unknown error: please try again'
          );
        }
      },
      error: (jqXHR, status, errorThrown) => {
        // clear the status
        $('#{{ fetch_matches_status_id }}').html('');
        setInvalid('{{ match_numbers_input_id }}', jqXHR.statusText);
      },
    });
  }
  $(document).ready(() => {
    // Fetch roster
    $('#{{ fetch_roster_btn_id }}').click((event) => {
      handleFetchRosterClicked();
    });
    // clear the flashed text after 60 seconds
    clearElementAfter('{{ fetch_roster_status_id }}', 60);

    // Fetch match info
    $('#{{ match_numbers_input_id }}').onEnterKeyPress((event) => {
      $('#{{ fetch_matches_btn_id }}').click();
    });
    $('#{{ fetch_matches_btn_id }}').click((event) => {
      handleFetchMatchInfoClicked();
    });
  });
</script>
{% endblock %}
