{% extends "shared/layout.jinja" %}

{% block title %}
Full Roster
{% endblock %}

{% set refetch_roster_btn_id = "refetch-roster-btn" %}
{% set clear_roster_btn_id = "clear-roster-btn" %}
{% set fetch_roster_messages_id = "fetch-roster-messages" %}

{% set teams_all_divisions_page_btn_id = "teams-all-divisions" %}
{% set teams_division_page_btn_class = "division-page-btn" %}
{% set teams_division_page_wrapper_class =
     teams_division_page_btn_class ~ "-wrapper"
 %}
{% set no_teams_row_id = "no-teams-row" %}

{% set flashed = get_flashed_by_categories(subcategories=true) %}

{% macro _pagination_by_school(label, by_school) %}
{% set all_schools_btn_id = label ~ "-all-schools" %}
{% set page_btn_class = label ~ "-school-page-btn" %}
{% set page_wrapper_class = page_btn_class ~ "-wrapper" %}
{{ macros.pagination(
     all_schools_btn_id,
     page_btn_class,
     page_wrapper_class,
     "school",
     by_school.keys(),
   )
}}
{% endmacro %}

{% macro users_table(label, users_by_school) %}
{% set label_lower = label|lower %}
{% set user_row_class = label_lower ~ "-user-row" %}
<div class="row mb-2">
  <div class="col">
    <h4>{{ label }}</h4>
    {% if users_by_school|length == 0 %}
    <div>No {{ label_lower }}</div>
    {% else %}
    {% if users_by_school|length > 1 %}
    {# use a pagination component to filter by each school #}
    {{ _pagination_by_school(label_lower, users_by_school) }}
    {% endif %}
    <table class="table table-striped table-hover">
      <thead>
        <tr>
          <th class="table-sm-col"></th>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Email</th>
          <th>School</th>
        </tr>
      </thead>
      <tbody>
        {% for school_name, users_list in users_by_school.items() %}
        {% for user in users_list %}
        <tr class="{{ user_row_class }}" school="{{ school_name|e }}">
          <th class="row-index table-sm-col"></th>
          <td>{{ user.first_name|e }}</td>
          <td>{{ user.last_name|e }}</td>
          {% if user.email_valid %}
          <td>{{ user.email|e }}</td>
          {% else %}
          <td class="table-danger">
            {{ user.email|e }} [invalid]
          </td>
          {% endif %}
          <td>{{ school_name|e }}</td>
        </tr>
        {% endfor %}
        {% endfor %}
      </tbody>
    </table>
    {% endif %}
  </div>
</div>
{% endmacro %}

{% macro team_member(user) %}
{% if user is none %}
<em class="text-muted">None</em>
{% else %}
{{ user.full_name|e }}
{% endif %}
{% endmacro %}

{% block body %}
<div id="roster-body" class="container-fluid">
  <div class="row">
    <div class="col">
      <h2>Full Roster</h2>
    </div>
    <div class="col-auto">
      {{ macros.loading_btn(
           refetch_roster_btn_id,
           "success",
           ("Fetch" if is_roster_empty else "Refetch") ~ " Roster",
           "Fetching...",
         )
      }}
    </div>
    {% if not is_roster_empty %}
    <div class="col-auto ps-0">
      {{ macros.confirm_btn(
           clear_roster_btn_id,
           "Clear Roster",
           "clear the full roster",
           loading_text="Clearing...",
         )
      }}
    </div>
    {% endif %}
  </div>
  {% if has_fetch_logs %}
  <div class="row mb-2">
    <div class="col">
      See the fetch logs <a href="{{ url_for('fetch_roster_logs') }}">here</a>.
    </div>
  </div>
  {% endif %}
  {{ macros.flashed_messages(
       fetch_roster_messages_id, flashed["fetch-roster"], classes="mb-2"
     )
  }}
  {% if is_roster_empty %}
  <div class="row mb-2">
    <div class="col">
      Empty roster
    </div>
  </div>
  {% else %}
  <div class="row mb-2">
    <div class="col">
      <h4>Schools</h4>
      {% if schools|length == 0 %}
      <div>No schools</div>
      {% else %}
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th class="table-sm-col"></th>
            <th>School Name</th>
          </tr>
        </thead>
        <tbody>
          {% for school in schools %}
          <tr>
            <th class="table-sm-col">{{ loop.index }}</th>
            <td>{{ school.name|e }}</td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
      {% endif %}
    </div>
  </div>
  {{ users_table("Coaches", coaches) }}
  {{ users_table("Athletes", athletes) }}
  {{ users_table("Spectators", spectators) }}
  <div class="row mb-2">
    <div class="col">
      <h4>Teams</h4>
      {% if teams_by_school|length == 0 %}
      <div>No teams</div>
      {% else %}
      {% with label = "teams" %}
      {% with team_row_class = label ~ "-row" %}
      {% if teams_by_school|length > 1 %}
      {# use a pagination component to filter by each school #}
      {{ _pagination_by_school(label, teams_by_school) }}
      {% endif %}
      {% if divisions|length > 1 %}
      {# use a pagination component to filter by each division #}
      {{ macros.pagination(
           teams_all_divisions_page_btn_id,
           teams_division_page_btn_class,
           teams_division_page_wrapper_class,
           "division",
           divisions,
         )
      }}
      {% endif %}
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th class="table-sm-col"></th>
            <th>School</th>
            <th>Team</th>
            <th>Light</th>
            <th>Middle</th>
            <th>Heavy</th>
            <th>Alternates</th>
          </tr>
        </thead>
        <tbody>
          <tr id="{{ no_teams_row_id }}" class="{{ team_row_class }} d-none">
            <td colspan="7">
              <em class="text-muted">No teams</em>
            </td>
          </tr>
          {% for school_name, teams_list in teams_by_school.items() %}
          {% for team in teams_list %}
          {% set division = team.division %}
          <tr
            class="{{ team_row_class }}"
            school="{{ school_name|e }}"
            division="{{ division|e }}"
          >
            <th class="row-index table-sm-col"></th>
            <td>{{ school_name|e }}</td>
            <td>{{ (division ~ team.number)|e }}</td>
            <td>{{ team_member(team.light) }}</td>
            <td>{{ team_member(team.middle) }}</td>
            <td>{{ team_member(team.heavy) }}</td>
            <td>
              {% if team.alternates|length == 0 %}
              <em class="text-muted">None</em>
              {% else %}
              {% for alternate in team.alternates %}
              <div>{{ team_member(alternate) }}</div>
              {% endfor %}
              {% endif %}
            </td>
          </tr>
          {% endfor %}
          {% endfor %}
        </tbody>
      </table>
      {% endwith %}
      {% endwith %}
      {% endif %}
    </div>
  </div>
{% endif %}
  <div class="row">
    <div class="col">
      <a href="{{ url_for('view_full_roster_raw') }}">Raw roster</a>
    </div>
  </div>
</div>
{% endblock %}

{% block script %}
<script>
  function handleFetchRosterClicked() {
    if (isButtonLoading('{{ refetch_roster_btn_id }}')) {
      // currently fetching; ignore click
      return;
    }

    // clear messages
    $('#{{ fetch_roster_messages_id }}').html('');

    setButtonLoading('{{ refetch_roster_btn_id }}');
    // just reload once the fetching is done
    ajaxRequest('POST', '{{ url_for("fetch_roster", flash_all=1) }}');
  }

  function handleClearRosterClicked() {
    if (isButtonLoading('{{ clear_roster_btn_id }}')) {
      // currently clearing; ignore click
      return;
    }

    // clear messages
    $('#{{ fetch_roster_messages_id }}').html('');

    setButtonLoading('{{ clear_roster_btn_id }}');
    // just reload once the clearing is done
    ajaxRequest('DELETE', '{{ url_for("fetch_roster") }}');
  }

  $(document).ready(() => {
    $('#{{ refetch_roster_btn_id }}').click((event) => {
      handleFetchRosterClicked();
    });
    $('#{{ clear_roster_btn_id }}').click((event) => {
      handleClearRosterClicked();
    });

    // pagination buttons by school
    for (const label of ['coaches', 'spectators', 'athletes']) {
      const allBtnId = `${label}-all-schools`;
      const pageBtnClass = `${label}-school-page-btn`;
      const pageBtnWrapperClass = `${pageBtnClass}-wrapper`;
      const rowClass = `${label}-user-row`;
      handleBsPagination(
        allBtnId,
        pageBtnClass,
        pageBtnWrapperClass,
        'school',
        rowClass,
        {
          doneCallback: (environ) => {
            // number all showing rows
            $(`.${environ.itemClass}:not(.d-none) > .row-index`).each(
              (index, element) => {
                $(element).html(String(index + 1));
              }
            );
          },
        }
      );
    }
    // pagination of teams by school and division
    const teamsSchoolPageBtnClass = 'teams-school-page-btn';
    const callbacks = {
      startCallback: (environ) => {
        if (environ.attr === 'school') {
          // get currently selected division and add it to the environment
          const $divisionPageBtn = $(
            '.{{ teams_division_page_wrapper_class }}.active'
          ).find('.{{ teams_division_page_btn_class }}');
          if (elementHasAttr($divisionPageBtn, 'all-division')) {
            // "all divisions" is selected; do nothing
          } else {
            const division = $divisionPageBtn.html()?.trim();
            Object.assign(environ, { division });
          }
        } else {
          // get currently selected school and add it to the environment
          const $schoolPageBtn = $(
            `.${teamsSchoolPageBtnClass}-wrapper.active`
          ).find(`.${teamsSchoolPageBtnClass}`);
          if (elementHasAttr($schoolPageBtn, 'all-school')) {
            // "all schools" is selected; do nothing
          } else {
            const school = $schoolPageBtn.html()?.trim();
            Object.assign(environ, { school });
          }
        }
      },
      shouldShowItemCallback: (selected, $element, environ, defaultShow) => {
        if (!defaultShow) {
          // doesn't even show by default
          return false;
        }
        if (environ.attr === 'school' && environ.division != null) {
          // also filter by division
          return getElementAttr($element, 'division') === environ.division;
        }
        if (environ.attr === 'division' && environ.school != null) {
          // also filter by school
          return getElementAttr($element, 'school') === environ.school;
        }
        return true;
      },
      doneCallback: (environ) => {
        // number all showing rows
        const $showingRows = $(
          `.${environ.itemClass}:not(.d-none) > .row-index`
        );
        if ($showingRows.length === 0) {
          $('#{{ no_teams_row_id }}').removeClass('d-none');
        } else {
          $('#{{ no_teams_row_id }}').addClass('d-none');
          $showingRows.each((index, element) => {
            anyShowing = true;
            $(element).html(String(index + 1));
          });
        }
      },
    };
    handleBsPagination(
      'teams-all-schools',
      teamsSchoolPageBtnClass,
      `${teamsSchoolPageBtnClass}-wrapper`,
      'school',
      'teams-row',
      callbacks
    );
    handleBsPagination(
      '{{ teams_all_divisions_page_btn_id }}',
      '{{ teams_division_page_btn_class }}',
      '{{ teams_division_page_wrapper_class }}',
      'division',
      'teams-row',
      callbacks
    );
  });
</script>
{% endblock %}
