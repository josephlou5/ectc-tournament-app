{% extends "shared/layout.jinja" %}

{% block title %}
Full Roster
{% endblock %}

{% set refetch_roster_btn_id = "refetch-roster-btn" %}
{% set clear_roster_btn_id = "clear-roster-btn" %}
{% set fetch_roster_messages_id = "fetch-roster-messages" %}

{% set flashed = get_flashed_by_categories(subcategories=true) %}

{% macro _pagination_component(label, by_school) %}
{% set pagination_btn_class = label ~ "-school-page-btn" %}
{% set pagination_wrapper_class = pagination_btn_class ~ "-wrapper" %}
<nav>
  <ul class="pagination">
    <li
      id="{{ label }}-all-schools"
      class="page-item {{ pagination_wrapper_class }}"
    >
      <a
        class="page-link {{ pagination_btn_class }}"
        role="button"
        all-schools="true"
      >
        All
      </a>
    </li>
    {% for school_name in by_school.keys() %}
    <li
      id="{{ label }}-school-{{ school_name|e }}-page-btn"
      class="page-item {{ pagination_wrapper_class }}"
    >
      <a class="page-link {{ pagination_btn_class }}" role="button">
        {{ school_name|e }}
      </a>
    </li>
    {% endfor %}
  </ul>
</nav>
{% endmacro %}

{% macro users_table(label, users_by_school) %}
{% set label_lower = label|lower %}
{% set user_row_class = label_lower ~ "-user-row" %}
<div class="row mb-2">
  <div class="col">
    <h4>{{ label }}</h4>
    {% if users_by_school|length == 0 %}
    <div>No {{ label_lower }}</div>
    {% else %}
    {% if users_by_school|length > 1 %}
    {# use a pagination component to filter by each school #}
    {{ _pagination_component(label_lower, users_by_school) }}
    {% endif %}
    <table class="table table-striped table-hover">
      <thead>
        <tr>
          <th class="table-sm-col"></th>
          <th>First Name</th>
          <th>Last Name</th>
          <th>Email</th>
          <th>School</th>
        </tr>
      </thead>
      <tbody>
        {% for school_name, users_list in users_by_school.items() %}
        {% set school_row_class =
             label_lower ~ "-school-" ~ school_name ~ "-row"
         %}
        {% for user in users_list %}
        <tr class="{{ user_row_class }} {{ school_row_class }}">
          <th class="row-index table-sm-col"></th>
          <td>{{ user.first_name|e }}</td>
          <td>{{ user.last_name|e }}</td>
          {% if user.email_valid %}
          <td>{{ user.email|e }}</td>
          {% else %}
          <td class="table-danger">
            {{ user.email|e }} [invalid]
          </td>
          {% endif %}
          <td>{{ school_name|e }}</td>
        </tr>
        {% endfor %}
        {% endfor %}
      </tbody>
    </table>
    {% endif %}
  </div>
</div>
{% endmacro %}

{% macro team_member(user) %}
{% if user is none %}
<em class="text-muted">None</em>
{% else %}
{{ user.full_name|e }}
{% endif %}
{% endmacro %}

{% block body %}
<div id="roster-body" class="container-fluid">
  <div class="row">
    <div class="col">
      <h2>Full Roster</h2>
    </div>
    <div class="col-auto">
      {{ macros.loading_btn(
           refetch_roster_btn_id,
           "success",
           ("Fetch" if is_roster_empty else "Refetch") ~ " Roster",
           "Fetching...",
         )
      }}
    </div>
    {% if not is_roster_empty %}
    <div class="col-auto ps-0">
      {{ macros.confirm_btn(
           clear_roster_btn_id,
           "Clear Roster",
           "clear the full roster",
           loading_text="Clearing...",
         )
      }}
    </div>
    {% endif %}
  </div>
  {% if has_fetch_logs %}
  <div class="row mb-2">
    <div class="col">
      See the fetch logs <a href="{{ url_for('fetch_roster_logs') }}">here</a>.
    </div>
  </div>
  {% endif %}
  {{ macros.flashed_messages(
       fetch_roster_messages_id, flashed["fetch-roster"], classes="mb-2"
     )
  }}
  {% if is_roster_empty %}
  <div class="row mb-2">
    <div class="col">
      Empty roster
    </div>
  </div>
  {% else %}
  <div class="row mb-2">
    <div class="col">
      <h4>Schools</h4>
      {% if schools|length == 0 %}
      <div>No schools</div>
      {% else %}
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th class="table-sm-col"></th>
            <th>School Name</th>
          </tr>
        </thead>
        <tbody>
          {% for school in schools %}
          <tr>
            <th class="table-sm-col">{{ loop.index }}</th>
            <td>{{ school.name|e }}</td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
      {% endif %}
    </div>
  </div>
  {{ users_table("Coaches", coaches) }}
  {{ users_table("Athletes", athletes) }}
  {{ users_table("Spectators", spectators) }}
  <div class="row mb-2">
    <div class="col">
      <h4>Teams</h4>
      {% if teams_by_school|length == 0 %}
      <div>No teams</div>
      {% else %}
      {% with label = "teams" %}
      {% with user_row_class = label ~ "-user-row" %}
      {% if teams_by_school|length > 1 %}
      {# use a pagination component to filter by each school #}
      {{ _pagination_component(label, teams_by_school) }}
      {% endif %}
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th class="table-sm-col"></th>
            <th>School</th>
            <th>Code</th>
            <th>Light</th>
            <th>Middle</th>
            <th>Heavy</th>
            <th>Alternates</th>
          </tr>
        </thead>
        <tbody>
          {% for school_name, teams_list in teams_by_school.items() %}
          {% set school_row_class = label ~ "-school-" ~ school_name ~ "-row" %}
          {% for team in teams_list %}
          <tr class="{{ user_row_class }} {{ school_row_class }}">
            <th class="row-index table-sm-col"></th>
            <td>{{ school_name|e }}</td>
            <td>{{ team.code|e }}</td>
            <td>{{ team_member(team.light) }}</td>
            <td>{{ team_member(team.middle) }}</td>
            <td>{{ team_member(team.heavy) }}</td>
            <td>
              {% if team.alternates|length == 0 %}
              <em class="text-muted">None</em>
              {% else %}
              {% for alternate in team.alternates %}
              <div>{{ alternate.full_name|e }}</div>
              {% endfor %}
              {% endif %}
            </td>
          </tr>
          {% endfor %}
          {% endfor %}
        </tbody>
      </table>
      {% endwith %}
      {% endwith %}
      {% endif %}
    </div>
  </div>
{% endif %}
  <div class="row">
    <div class="col">
      <a href="{{ url_for('view_full_roster_raw') }}">Raw roster</a>
    </div>
  </div>
</div>
{% endblock %}

{% block script %}
<script>
  function handleFetchRosterClicked() {
    if (isButtonLoading('{{ refetch_roster_btn_id }}')) {
      // currently fetching; ignore click
      return;
    }

    // clear messages
    $('#{{ fetch_roster_messages_id }}').html('');

    setButtonLoading('{{ refetch_roster_btn_id }}');
    // just reload once the fetching is done
    ajaxRequest('POST', '{{ url_for("fetch_roster", flash_all=1) }}');
  }

  function handleClearRosterClicked() {
    if (isButtonLoading('{{ clear_roster_btn_id }}')) {
      // currently clearing; ignore click
      return;
    }

    // clear messages
    $('#{{ fetch_roster_messages_id }}').html('');

    setButtonLoading('{{ clear_roster_btn_id }}');
    // just reload once the clearing is done
    ajaxRequest('DELETE', '{{ url_for("fetch_roster") }}');
  }

  function handlePaginationChanged(label, school = null) {
    if (school == null) {
      // deactivate all pagination buttons
      $(`.${label}-school-page-btn-wrapper`).removeClass('active');
      // make the "all schools" button active
      $(`#${label}-all-schools`).addClass('active');
      // show all rows
      $(`.${label}-user-row`).removeClass('d-none');
    } else {
      school = school.trim();
      if (school === '') return;
      // deactivate all pagination buttons
      $(`.${label}-school-page-btn-wrapper`).removeClass('active');
      // make this pagination button active
      $(`#${label}-school-${school}-page-btn`).addClass('active');
      // show this school's rows
      $(`.${label}-user-row`).addClass('d-none');
      $(`.${label}-school-${school}-row`).removeClass('d-none');
    }
    // number all showing rows
    $(`.${label}-user-row:not(.d-none) > .row-index`).each((index, element) => {
      $(element).html(String(index + 1));
    });
  }

  $(document).ready(() => {
    $('#{{ refetch_roster_btn_id }}').click((event) => {
      handleFetchRosterClicked();
    });
    $('#{{ clear_roster_btn_id }}').click((event) => {
      handleClearRosterClicked();
    });

    // pagination buttons by school
    for (const label of ['coaches', 'spectators', 'athletes', 'teams']) {
      // initialize with everything showing
      handlePaginationChanged(label);
      $(`.${label}-school-page-btn`).click((event) => {
        const $element = $(event.target);
        if ($element.attr('all-schools') != null) {
          handlePaginationChanged(label);
        } else {
          handlePaginationChanged(label, $element.html() ?? '');
        }
      });
    }
  });
</script>
{% endblock %}
