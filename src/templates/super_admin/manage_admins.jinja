{% extends "shared/layout.jinja" %}

{% block title %}
Manage Admins
{% endblock %}

{% set manage_admins_messages_id = "manage-admins-messages" %}
{% set add_admin_input_id = "add-admin-input" %}
{% set add_admin_btn_id = "add-admin-btn" %}
{% set delete_admin_class = "delete-admin-btn" %}

{% set flashed = get_flashed_by_categories(subcategories=true) %}

{% block body %}
<div id="manage-admins-body" class="container-fluid">
  <div class="row mb-2">
    <div class="col">
      <h2>Manage Admins</h2>
    </div>
  </div>
  <div class="row">
    <div class="col">
      <div class="row mb-2">
        <div class="col">
          <h4>Super Admins</h4>
          <div class="mb-2">
            Super Admins are the only ones with access to this page, where you
            can add or remove admin email addresses. You cannot edit Super
            Admins anywhere on the frontend; you will have to access the
            database manually and add a row with <code>is_super_admin</code> set
            to <code>true</code>.
          </div>
          <div>
            Super Admins can access the
            <a href="{{ url_for('global_settings') }}">Global Settings</a> page,
            whereas normal admins cannot.
          </div>
        </div>
      </div>
      <div class="row mb-2">
        <div class="col">
          {# the person viewing this must be a super admin, so there is
             definitely at least one
           #}
          <table class="table table-hover table-striped">
            <thead>
              <tr>
                <th class="table-sm-col"></th>
                <th>Email</th>
              </tr>
            </thead>
            <tbody>
              {% for email in super_admins %}
              <tr
                {% if email == logged_in_email %}
                class="table-active"
                {% endif %}
              >
                <th class="table-sm-col">{{ loop.index }}</th>
                <td>{{ email|e }}</td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col">
      <div class="row mb-2">
        <div class="col">
          <h4>Admins</h4>
          <div>
            Those with an Admin role will be able to access the
            <a href="{{ url_for('admin_settings') }}">Admin Settings</a> and
            <a href="{{ url_for('notifications') }}">Notifications</a> pages.
            They will be able to change any of the admin settings, fetch or
            clear the roster, and send match notifications. On the
            <a href="{{ url_for('view_matches_status') }}">Matches Status</a>
            page, they will be able to see the template and recipients for each
            sent email.
          </div>
        </div>
      </div>
      {{ macros.flashed_messages(
           manage_admins_messages_id, flashed["manage-admins"], classes="mb-2"
         )
      }}
      <div class="row mb-2">
        {{ macros.form_input_label(add_admin_input_id, "Add Admin") }}
        <div class="col-4 pe-0">
          {{ macros.form_input(add_admin_input_id, placeholder="Admin email") }}
        </div>
        <div class="col-auto">
          {{ macros.loading_btn(
               add_admin_btn_id, "success", "Add", "Adding..."
             )
          }}
        </div>
      </div>
      {% if admins|length > 0 %}
      <div class="row mb-2">
        <div class="col">
          <table class="table table-hover table-striped">
            <thead>
              <tr>
                <th class="table-sm-col"></th>
                <th>Email</th>
                <th class="table-sm-col"></th>
              </tr>
            </thead>
            <tbody>
              {% for email in admins %}
              <tr>
                <th class="table-sm-col">{{ loop.index }}</th>
                <td>{{ email|e }}</td>
                <td class="table-sm-col">
                  {% with delete_button_id = "delete-admin-btn-" ~ loop.index0
                   %}
                  <button
                    type="button"
                    id="{{ delete_button_id }}"
                    class="btn btn-sm btn-danger {{ delete_admin_class }}"
                    email="{{ email|e }}"
                  >
                    {# a mini-version of the loading button #}
                    <span
                      id="{{ delete_button_id }}-spinner"
                      class="spinner-border spinner-border-sm d-none"
                      role="status"
                      aria-hidden="true"
                    ></span>
                    <i
                      id="{{ delete_button_id }}-icon"
                      class="bi bi-trash3"
                    ></i>
                  </button>
                  {% endwith %}
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </div>
      {% endif %}
    </div>
  </div>
</div>
{% endblock %}

{% block script %}
<script>
  function handleAddAdminClicked() {
    if (isButtonLoading('{{ add_admin_btn_id }}')) {
      // currently adding; ignore click
      return;
    }

    // clear messages
    clearInvalid('{{ add_admin_input_id }}');
    clearElement('{{ manage_admins_messages_id }}');

    const adminEmail = getInputValue('{{ add_admin_input_id }}');
    if (adminEmail === '') {
      // Error: no email given
      setInvalid('{{ add_admin_input_id }}', 'Please enter an email.');
      return;
    }

    setButtonLoading('{{ add_admin_btn_id }}');
    ajaxRequest('POST', '{{ url_for("manage_admins") }}', {
      contentType: 'application/json',
      data: JSON.stringify({ email: adminEmail }),
      success: (response, status, jqXHR) => {
        if (response.success) {
          // reload the page
          location.reload();
        } else {
          // some failure
          stopButtonLoading('{{ add_admin_btn_id }}');
          setInvalid(
            '{{ add_admin_input_id }}',
            response.reason ?? 'Unknown error: please try again'
          );
        }
      },
      error: (jqXHR, status, errorThrown) => {
        stopButtonLoading('{{ add_admin_btn_id }}');
        setInvalid('{{ add_admin_input_id }}', jqXHR.statusText);
      },
    });
  }

  function handleDeleteAdminClicked(buttonId) {
    if (!$(`#${buttonId}-spinner`).hasClass('d-none')) {
      // currently deleting; ignore click
      return;
    }

    // clear messages
    clearElement('{{ manage_admins_messages_id }}');

    const adminEmail = getAttr(buttonId, 'email');
    if (adminEmail === '') {
      // no email given; assume invalid
      return;
    }

    // set the button as "loading"
    $(`#${buttonId}-spinner`).removeClass('d-none');
    $(`#${buttonId}-icon`).addClass('d-none');

    // just reload once the deleting is done
    ajaxRequest('DELETE', '{{ url_for("manage_admins") }}', {
      contentType: 'application/json',
      data: JSON.stringify({ email: adminEmail }),
    });
  }

  $(document).ready(() => {
    $('#{{ add_admin_input_id }}').onEnterKeyPress((event) => {
      handleAddAdminClicked();
    });
    $('#{{ add_admin_btn_id }}').click((event) => {
      handleAddAdminClicked();
    });
    $('.{{ delete_admin_class }}').click((event) => {
      // can't use `event.target` because that would be the button contents
      const buttonElement = event.currentTarget;
      handleDeleteAdminClicked(buttonElement.id);
    });
    // clear the flashed text after 60 seconds
    clearElementAfter('{{ manage_admins_messages_id }}', 60);
  });
</script>
{% endblock %}
